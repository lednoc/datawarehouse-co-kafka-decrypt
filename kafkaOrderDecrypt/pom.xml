<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>   <!-- orig 1/28/21  2.2.5.RELEASE -->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.dcsg.ddw</groupId>
	<artifactId>kafkaOrderDecrypt</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ddw-kafka-order-consumer</name>
	<description>Read order data from Kafka sink to DDW</description>

	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>  <!-- is Greenwich.SR2 in co-eom-transform code-->
			<!-- kc added -->

            <confluent.version>5.1.0</confluent.version>
            <avro.version>1.10.1</avro.version>  <!-- orig 1.8.2 -->
             <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
             <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
             <sonar.language>java</sonar.language>

		<!--end kc  -->
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<!--kc add  -->
			  <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
        </exclusions>
			<!--  kc end -->
		</dependency>
		
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>2.4.4.RELEASE</version> <!-- kc added version tag to latest -->
		</dependency>

		<dependency>
			<groupId>com.oracle.ojdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!--kc add  -->
		   <dependency>
		    <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>		
    
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    
        <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-streams-avro-serde</artifactId>
      <version>${confluent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${avro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.xmlunit</groupId>
      <artifactId>xmlunit-core</artifactId>
      <version>2.6.2</version>
    </dependency>
		
<!--  test removal for custom order.  to remove customer info
	  	<dependency>
      <groupId>com.dsg.customerorder.avro</groupId>
      <artifactId>customer-order-avro</artifactId>
      <version>1.13.0</version> 
    </dependency>
  --> 
        <dependency>
      <groupId>com.dsg.customerorder.enums</groupId>
      <artifactId>customer-order-enums</artifactId>
      <version>0.1.4</version>
      <exclusions>
      	<exclusion>
      		<groupId>com.dsg.customerorder.avro</groupId>
      		<artifactId>customer-order-avro</artifactId>
      	</exclusion>
      </exclusions>
        </dependency>
			<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		
		 <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20200518</version>
    </dependency>
		
		<!-- kc end -->
		
		
		<dependency>
			<groupId>com.dsg.customerorder.corsa</groupId>
			<artifactId>co-rsa-private-dev</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.dsg.customerorder.corsa</groupId>
			<artifactId>co-rsa-private-prod</artifactId>
			<version>0.0.1</version>
		</dependency>	
		
		  <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>	
		<dependency>
    <groupId>io.micrometer</groupId>
    <artifactId>micrometer-registry-jmx</artifactId>
    
  





</dependency>

		
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
			   <finalName>kafka-co-decrypt</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.1</version>
         <configuration>
        <skipTests>true</skipTests>  <!-- kc added -->
    </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.6.0.1398</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.2</version>
        <configuration>
          <append>true</append>
          <excludes>
            <exclude>com.dsg.microservices.customerordereomtransformation.eombean*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

<!-- kc   -->
<plugin>
  <groupId>org.apache.avro</groupId>
  <artifactId>avro-maven-plugin</artifactId>
  <version>${avro.version}</version> 
  <executions>
    <execution>
      <phase>generate-sources</phase>
      <goals>
        <goal>schema</goal>
      </goals>
       <configuration>
        <sourceDirectory>${project.basedir}\src\main\avro\</sourceDirectory>
        <outputDirectory>${project.basedir}\src\main\java\</outputDirectory>
      </configuration>

    </execution>
  </executions>
</plugin>
<!--kc end -->


      <!-- platform kafka ssl configs -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <!-- update JAR with Node dependencies in JAR root -->
        <executions>
          <execution>
            <id>addExtractedJarOnRootLevel</id>
            <phase>package</phase>
            <configuration>
              <target>
              <!--kc co team uses project.artifactId -->
                <zip destfile="${project.build.directory}/${project.build.finalName}.jar"  
                  update="yes" compress="false">
                  <fileset dir="${project.basedir}">
                  <include name="kafkaclient.truststore-dev.jks"/>
                    <include name="EBIRDataWarehousing.keystore.jks"/>
                    <include name="kafka.truststore.jks"/>
                    <include name="kafka-super.keystore-dev.jks"/>
                    <include name="kafka-super.truststore-dev.jks"/>
                  </fileset>
                </zip>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- platform kafka ssl configs -->

    </plugins>
		
	</build>
	<!-- kc add -->
	<repositories>

    <repository>
      <id>dsg-nexus-customer-order</id>
      <name>dsg-nexus-customer-order</name>
      <url>https://nexus.tools.dcsg.com/repository/customer-order/</url>
    </repository>
    <repository>
      <id>confluent</id>
      <url>http://packages.confluent.io/maven/</url>
    </repository>

  </repositories>
	
	<!-- end kc -->
</project>
