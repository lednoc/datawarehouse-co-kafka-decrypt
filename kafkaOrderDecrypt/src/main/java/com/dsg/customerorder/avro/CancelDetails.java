/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dsg.customerorder.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CancelDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4785467182333249201L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CancelDetails\",\"namespace\":\"com.dsg.customerorder.avro\",\"fields\":[{\"name\":\"cancelSource\",\"type\":{\"type\":\"enum\",\"name\":\"CancelSource\",\"symbols\":[\"CallCenter\",\"Web\",\"Fraud\",\"Other\"]}},{\"name\":\"agent\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"cancelDate\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"reason\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CancelDetails> ENCODER =
      new BinaryMessageEncoder<CancelDetails>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CancelDetails> DECODER =
      new BinaryMessageDecoder<CancelDetails>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CancelDetails> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CancelDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CancelDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CancelDetails>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CancelDetails to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CancelDetails from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CancelDetails instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CancelDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private com.dsg.customerorder.avro.CancelSource cancelSource;
   private java.lang.CharSequence agent;
   private java.lang.CharSequence cancelDate;
   private java.lang.CharSequence reason;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CancelDetails() {}

  /**
   * All-args constructor.
   * @param cancelSource The new value for cancelSource
   * @param agent The new value for agent
   * @param cancelDate The new value for cancelDate
   * @param reason The new value for reason
   */
  public CancelDetails(com.dsg.customerorder.avro.CancelSource cancelSource, java.lang.CharSequence agent, java.lang.CharSequence cancelDate, java.lang.CharSequence reason) {
    this.cancelSource = cancelSource;
    this.agent = agent;
    this.cancelDate = cancelDate;
    this.reason = reason;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cancelSource;
    case 1: return agent;
    case 2: return cancelDate;
    case 3: return reason;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cancelSource = (com.dsg.customerorder.avro.CancelSource)value$; break;
    case 1: agent = (java.lang.CharSequence)value$; break;
    case 2: cancelDate = (java.lang.CharSequence)value$; break;
    case 3: reason = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'cancelSource' field.
   * @return The value of the 'cancelSource' field.
   */
  public com.dsg.customerorder.avro.CancelSource getCancelSource() {
    return cancelSource;
  }


  /**
   * Sets the value of the 'cancelSource' field.
   * @param value the value to set.
   */
  public void setCancelSource(com.dsg.customerorder.avro.CancelSource value) {
    this.cancelSource = value;
  }

  /**
   * Gets the value of the 'agent' field.
   * @return The value of the 'agent' field.
   */
  public java.lang.CharSequence getAgent() {
    return agent;
  }


  /**
   * Sets the value of the 'agent' field.
   * @param value the value to set.
   */
  public void setAgent(java.lang.CharSequence value) {
    this.agent = value;
  }

  /**
   * Gets the value of the 'cancelDate' field.
   * @return The value of the 'cancelDate' field.
   */
  public java.lang.CharSequence getCancelDate() {
    return cancelDate;
  }


  /**
   * Sets the value of the 'cancelDate' field.
   * @param value the value to set.
   */
  public void setCancelDate(java.lang.CharSequence value) {
    this.cancelDate = value;
  }

  /**
   * Gets the value of the 'reason' field.
   * @return The value of the 'reason' field.
   */
  public java.lang.CharSequence getReason() {
    return reason;
  }


  /**
   * Sets the value of the 'reason' field.
   * @param value the value to set.
   */
  public void setReason(java.lang.CharSequence value) {
    this.reason = value;
  }

  /**
   * Creates a new CancelDetails RecordBuilder.
   * @return A new CancelDetails RecordBuilder
   */
  public static com.dsg.customerorder.avro.CancelDetails.Builder newBuilder() {
    return new com.dsg.customerorder.avro.CancelDetails.Builder();
  }

  /**
   * Creates a new CancelDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CancelDetails RecordBuilder
   */
  public static com.dsg.customerorder.avro.CancelDetails.Builder newBuilder(com.dsg.customerorder.avro.CancelDetails.Builder other) {
    if (other == null) {
      return new com.dsg.customerorder.avro.CancelDetails.Builder();
    } else {
      return new com.dsg.customerorder.avro.CancelDetails.Builder(other);
    }
  }

  /**
   * Creates a new CancelDetails RecordBuilder by copying an existing CancelDetails instance.
   * @param other The existing instance to copy.
   * @return A new CancelDetails RecordBuilder
   */
  public static com.dsg.customerorder.avro.CancelDetails.Builder newBuilder(com.dsg.customerorder.avro.CancelDetails other) {
    if (other == null) {
      return new com.dsg.customerorder.avro.CancelDetails.Builder();
    } else {
      return new com.dsg.customerorder.avro.CancelDetails.Builder(other);
    }
  }

  /**
   * RecordBuilder for CancelDetails instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CancelDetails>
    implements org.apache.avro.data.RecordBuilder<CancelDetails> {

    private com.dsg.customerorder.avro.CancelSource cancelSource;
    private java.lang.CharSequence agent;
    private java.lang.CharSequence cancelDate;
    private java.lang.CharSequence reason;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dsg.customerorder.avro.CancelDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.cancelSource)) {
        this.cancelSource = data().deepCopy(fields()[0].schema(), other.cancelSource);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.agent)) {
        this.agent = data().deepCopy(fields()[1].schema(), other.agent);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.cancelDate)) {
        this.cancelDate = data().deepCopy(fields()[2].schema(), other.cancelDate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.reason)) {
        this.reason = data().deepCopy(fields()[3].schema(), other.reason);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing CancelDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dsg.customerorder.avro.CancelDetails other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.cancelSource)) {
        this.cancelSource = data().deepCopy(fields()[0].schema(), other.cancelSource);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.agent)) {
        this.agent = data().deepCopy(fields()[1].schema(), other.agent);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.cancelDate)) {
        this.cancelDate = data().deepCopy(fields()[2].schema(), other.cancelDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.reason)) {
        this.reason = data().deepCopy(fields()[3].schema(), other.reason);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'cancelSource' field.
      * @return The value.
      */
    public com.dsg.customerorder.avro.CancelSource getCancelSource() {
      return cancelSource;
    }


    /**
      * Sets the value of the 'cancelSource' field.
      * @param value The value of 'cancelSource'.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.CancelDetails.Builder setCancelSource(com.dsg.customerorder.avro.CancelSource value) {
      validate(fields()[0], value);
      this.cancelSource = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'cancelSource' field has been set.
      * @return True if the 'cancelSource' field has been set, false otherwise.
      */
    public boolean hasCancelSource() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'cancelSource' field.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.CancelDetails.Builder clearCancelSource() {
      cancelSource = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'agent' field.
      * @return The value.
      */
    public java.lang.CharSequence getAgent() {
      return agent;
    }


    /**
      * Sets the value of the 'agent' field.
      * @param value The value of 'agent'.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.CancelDetails.Builder setAgent(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.agent = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'agent' field has been set.
      * @return True if the 'agent' field has been set, false otherwise.
      */
    public boolean hasAgent() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'agent' field.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.CancelDetails.Builder clearAgent() {
      agent = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'cancelDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getCancelDate() {
      return cancelDate;
    }


    /**
      * Sets the value of the 'cancelDate' field.
      * @param value The value of 'cancelDate'.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.CancelDetails.Builder setCancelDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.cancelDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'cancelDate' field has been set.
      * @return True if the 'cancelDate' field has been set, false otherwise.
      */
    public boolean hasCancelDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'cancelDate' field.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.CancelDetails.Builder clearCancelDate() {
      cancelDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'reason' field.
      * @return The value.
      */
    public java.lang.CharSequence getReason() {
      return reason;
    }


    /**
      * Sets the value of the 'reason' field.
      * @param value The value of 'reason'.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.CancelDetails.Builder setReason(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.reason = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'reason' field has been set.
      * @return True if the 'reason' field has been set, false otherwise.
      */
    public boolean hasReason() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'reason' field.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.CancelDetails.Builder clearReason() {
      reason = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CancelDetails build() {
      try {
        CancelDetails record = new CancelDetails();
        record.cancelSource = fieldSetFlags()[0] ? this.cancelSource : (com.dsg.customerorder.avro.CancelSource) defaultValue(fields()[0]);
        record.agent = fieldSetFlags()[1] ? this.agent : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.cancelDate = fieldSetFlags()[2] ? this.cancelDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.reason = fieldSetFlags()[3] ? this.reason : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CancelDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<CancelDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CancelDetails>
    READER$ = (org.apache.avro.io.DatumReader<CancelDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeEnum(this.cancelSource.ordinal());

    if (this.agent == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.agent);
    }

    if (this.cancelDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.cancelDate);
    }

    if (this.reason == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.reason);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.cancelSource = com.dsg.customerorder.avro.CancelSource.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.agent = null;
      } else {
        this.agent = in.readString(this.agent instanceof Utf8 ? (Utf8)this.agent : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.cancelDate = null;
      } else {
        this.cancelDate = in.readString(this.cancelDate instanceof Utf8 ? (Utf8)this.cancelDate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.reason = null;
      } else {
        this.reason = in.readString(this.reason instanceof Utf8 ? (Utf8)this.reason : null);
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.cancelSource = com.dsg.customerorder.avro.CancelSource.values()[in.readEnum()];
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.agent = null;
          } else {
            this.agent = in.readString(this.agent instanceof Utf8 ? (Utf8)this.agent : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.cancelDate = null;
          } else {
            this.cancelDate = in.readString(this.cancelDate instanceof Utf8 ? (Utf8)this.cancelDate : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.reason = null;
          } else {
            this.reason = in.readString(this.reason instanceof Utf8 ? (Utf8)this.reason : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










