/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dsg.customerorder.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class FulfillmentDetails extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 249921529024612428L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FulfillmentDetails\",\"namespace\":\"com.dsg.customerorder.avro\",\"fields\":[{\"name\":\"fulfillmentType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"purchaseOrder\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"fulfillmentLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FulfillmentLocation\",\"fields\":[{\"name\":\"shipLocationId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"fulfillmentLocationId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"fulfillmentAddress\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FulfillmentAddress\",\"fields\":[{\"name\":\"address1\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"address2\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"address3\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"city\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postalCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"fulfillmentOrderId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"timeShipped\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FulfillmentDetails> ENCODER =
      new BinaryMessageEncoder<FulfillmentDetails>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FulfillmentDetails> DECODER =
      new BinaryMessageDecoder<FulfillmentDetails>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FulfillmentDetails> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FulfillmentDetails> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FulfillmentDetails> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FulfillmentDetails>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FulfillmentDetails to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FulfillmentDetails from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FulfillmentDetails instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FulfillmentDetails fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence fulfillmentType;
   private java.lang.CharSequence purchaseOrder;
   private com.dsg.customerorder.avro.FulfillmentLocation fulfillmentLocation;
   private java.lang.CharSequence fulfillmentOrderId;
   private java.lang.CharSequence timeShipped;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FulfillmentDetails() {}

  /**
   * All-args constructor.
   * @param fulfillmentType The new value for fulfillmentType
   * @param purchaseOrder The new value for purchaseOrder
   * @param fulfillmentLocation The new value for fulfillmentLocation
   * @param fulfillmentOrderId The new value for fulfillmentOrderId
   * @param timeShipped The new value for timeShipped
   */
  public FulfillmentDetails(java.lang.CharSequence fulfillmentType, java.lang.CharSequence purchaseOrder, com.dsg.customerorder.avro.FulfillmentLocation fulfillmentLocation, java.lang.CharSequence fulfillmentOrderId, java.lang.CharSequence timeShipped) {
    this.fulfillmentType = fulfillmentType;
    this.purchaseOrder = purchaseOrder;
    this.fulfillmentLocation = fulfillmentLocation;
    this.fulfillmentOrderId = fulfillmentOrderId;
    this.timeShipped = timeShipped;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return fulfillmentType;
    case 1: return purchaseOrder;
    case 2: return fulfillmentLocation;
    case 3: return fulfillmentOrderId;
    case 4: return timeShipped;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: fulfillmentType = (java.lang.CharSequence)value$; break;
    case 1: purchaseOrder = (java.lang.CharSequence)value$; break;
    case 2: fulfillmentLocation = (com.dsg.customerorder.avro.FulfillmentLocation)value$; break;
    case 3: fulfillmentOrderId = (java.lang.CharSequence)value$; break;
    case 4: timeShipped = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'fulfillmentType' field.
   * @return The value of the 'fulfillmentType' field.
   */
  public java.lang.CharSequence getFulfillmentType() {
    return fulfillmentType;
  }


  /**
   * Sets the value of the 'fulfillmentType' field.
   * @param value the value to set.
   */
  public void setFulfillmentType(java.lang.CharSequence value) {
    this.fulfillmentType = value;
  }

  /**
   * Gets the value of the 'purchaseOrder' field.
   * @return The value of the 'purchaseOrder' field.
   */
  public java.lang.CharSequence getPurchaseOrder() {
    return purchaseOrder;
  }


  /**
   * Sets the value of the 'purchaseOrder' field.
   * @param value the value to set.
   */
  public void setPurchaseOrder(java.lang.CharSequence value) {
    this.purchaseOrder = value;
  }

  /**
   * Gets the value of the 'fulfillmentLocation' field.
   * @return The value of the 'fulfillmentLocation' field.
   */
  public com.dsg.customerorder.avro.FulfillmentLocation getFulfillmentLocation() {
    return fulfillmentLocation;
  }


  /**
   * Sets the value of the 'fulfillmentLocation' field.
   * @param value the value to set.
   */
  public void setFulfillmentLocation(com.dsg.customerorder.avro.FulfillmentLocation value) {
    this.fulfillmentLocation = value;
  }

  /**
   * Gets the value of the 'fulfillmentOrderId' field.
   * @return The value of the 'fulfillmentOrderId' field.
   */
  public java.lang.CharSequence getFulfillmentOrderId() {
    return fulfillmentOrderId;
  }


  /**
   * Sets the value of the 'fulfillmentOrderId' field.
   * @param value the value to set.
   */
  public void setFulfillmentOrderId(java.lang.CharSequence value) {
    this.fulfillmentOrderId = value;
  }

  /**
   * Gets the value of the 'timeShipped' field.
   * @return The value of the 'timeShipped' field.
   */
  public java.lang.CharSequence getTimeShipped() {
    return timeShipped;
  }


  /**
   * Sets the value of the 'timeShipped' field.
   * @param value the value to set.
   */
  public void setTimeShipped(java.lang.CharSequence value) {
    this.timeShipped = value;
  }

  /**
   * Creates a new FulfillmentDetails RecordBuilder.
   * @return A new FulfillmentDetails RecordBuilder
   */
  public static com.dsg.customerorder.avro.FulfillmentDetails.Builder newBuilder() {
    return new com.dsg.customerorder.avro.FulfillmentDetails.Builder();
  }

  /**
   * Creates a new FulfillmentDetails RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FulfillmentDetails RecordBuilder
   */
  public static com.dsg.customerorder.avro.FulfillmentDetails.Builder newBuilder(com.dsg.customerorder.avro.FulfillmentDetails.Builder other) {
    if (other == null) {
      return new com.dsg.customerorder.avro.FulfillmentDetails.Builder();
    } else {
      return new com.dsg.customerorder.avro.FulfillmentDetails.Builder(other);
    }
  }

  /**
   * Creates a new FulfillmentDetails RecordBuilder by copying an existing FulfillmentDetails instance.
   * @param other The existing instance to copy.
   * @return A new FulfillmentDetails RecordBuilder
   */
  public static com.dsg.customerorder.avro.FulfillmentDetails.Builder newBuilder(com.dsg.customerorder.avro.FulfillmentDetails other) {
    if (other == null) {
      return new com.dsg.customerorder.avro.FulfillmentDetails.Builder();
    } else {
      return new com.dsg.customerorder.avro.FulfillmentDetails.Builder(other);
    }
  }

  /**
   * RecordBuilder for FulfillmentDetails instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FulfillmentDetails>
    implements org.apache.avro.data.RecordBuilder<FulfillmentDetails> {

    private java.lang.CharSequence fulfillmentType;
    private java.lang.CharSequence purchaseOrder;
    private com.dsg.customerorder.avro.FulfillmentLocation fulfillmentLocation;
    private com.dsg.customerorder.avro.FulfillmentLocation.Builder fulfillmentLocationBuilder;
    private java.lang.CharSequence fulfillmentOrderId;
    private java.lang.CharSequence timeShipped;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dsg.customerorder.avro.FulfillmentDetails.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.fulfillmentType)) {
        this.fulfillmentType = data().deepCopy(fields()[0].schema(), other.fulfillmentType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.purchaseOrder)) {
        this.purchaseOrder = data().deepCopy(fields()[1].schema(), other.purchaseOrder);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.fulfillmentLocation)) {
        this.fulfillmentLocation = data().deepCopy(fields()[2].schema(), other.fulfillmentLocation);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasFulfillmentLocationBuilder()) {
        this.fulfillmentLocationBuilder = com.dsg.customerorder.avro.FulfillmentLocation.newBuilder(other.getFulfillmentLocationBuilder());
      }
      if (isValidValue(fields()[3], other.fulfillmentOrderId)) {
        this.fulfillmentOrderId = data().deepCopy(fields()[3].schema(), other.fulfillmentOrderId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.timeShipped)) {
        this.timeShipped = data().deepCopy(fields()[4].schema(), other.timeShipped);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing FulfillmentDetails instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dsg.customerorder.avro.FulfillmentDetails other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.fulfillmentType)) {
        this.fulfillmentType = data().deepCopy(fields()[0].schema(), other.fulfillmentType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.purchaseOrder)) {
        this.purchaseOrder = data().deepCopy(fields()[1].schema(), other.purchaseOrder);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fulfillmentLocation)) {
        this.fulfillmentLocation = data().deepCopy(fields()[2].schema(), other.fulfillmentLocation);
        fieldSetFlags()[2] = true;
      }
      this.fulfillmentLocationBuilder = null;
      if (isValidValue(fields()[3], other.fulfillmentOrderId)) {
        this.fulfillmentOrderId = data().deepCopy(fields()[3].schema(), other.fulfillmentOrderId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timeShipped)) {
        this.timeShipped = data().deepCopy(fields()[4].schema(), other.timeShipped);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'fulfillmentType' field.
      * @return The value.
      */
    public java.lang.CharSequence getFulfillmentType() {
      return fulfillmentType;
    }


    /**
      * Sets the value of the 'fulfillmentType' field.
      * @param value The value of 'fulfillmentType'.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder setFulfillmentType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.fulfillmentType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'fulfillmentType' field has been set.
      * @return True if the 'fulfillmentType' field has been set, false otherwise.
      */
    public boolean hasFulfillmentType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'fulfillmentType' field.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder clearFulfillmentType() {
      fulfillmentType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'purchaseOrder' field.
      * @return The value.
      */
    public java.lang.CharSequence getPurchaseOrder() {
      return purchaseOrder;
    }


    /**
      * Sets the value of the 'purchaseOrder' field.
      * @param value The value of 'purchaseOrder'.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder setPurchaseOrder(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.purchaseOrder = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'purchaseOrder' field has been set.
      * @return True if the 'purchaseOrder' field has been set, false otherwise.
      */
    public boolean hasPurchaseOrder() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'purchaseOrder' field.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder clearPurchaseOrder() {
      purchaseOrder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'fulfillmentLocation' field.
      * @return The value.
      */
    public com.dsg.customerorder.avro.FulfillmentLocation getFulfillmentLocation() {
      return fulfillmentLocation;
    }


    /**
      * Sets the value of the 'fulfillmentLocation' field.
      * @param value The value of 'fulfillmentLocation'.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder setFulfillmentLocation(com.dsg.customerorder.avro.FulfillmentLocation value) {
      validate(fields()[2], value);
      this.fulfillmentLocationBuilder = null;
      this.fulfillmentLocation = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'fulfillmentLocation' field has been set.
      * @return True if the 'fulfillmentLocation' field has been set, false otherwise.
      */
    public boolean hasFulfillmentLocation() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'fulfillmentLocation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.dsg.customerorder.avro.FulfillmentLocation.Builder getFulfillmentLocationBuilder() {
      if (fulfillmentLocationBuilder == null) {
        if (hasFulfillmentLocation()) {
          setFulfillmentLocationBuilder(com.dsg.customerorder.avro.FulfillmentLocation.newBuilder(fulfillmentLocation));
        } else {
          setFulfillmentLocationBuilder(com.dsg.customerorder.avro.FulfillmentLocation.newBuilder());
        }
      }
      return fulfillmentLocationBuilder;
    }

    /**
     * Sets the Builder instance for the 'fulfillmentLocation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.dsg.customerorder.avro.FulfillmentDetails.Builder setFulfillmentLocationBuilder(com.dsg.customerorder.avro.FulfillmentLocation.Builder value) {
      clearFulfillmentLocation();
      fulfillmentLocationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'fulfillmentLocation' field has an active Builder instance
     * @return True if the 'fulfillmentLocation' field has an active Builder instance
     */
    public boolean hasFulfillmentLocationBuilder() {
      return fulfillmentLocationBuilder != null;
    }

    /**
      * Clears the value of the 'fulfillmentLocation' field.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder clearFulfillmentLocation() {
      fulfillmentLocation = null;
      fulfillmentLocationBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'fulfillmentOrderId' field.
      * @return The value.
      */
    public java.lang.CharSequence getFulfillmentOrderId() {
      return fulfillmentOrderId;
    }


    /**
      * Sets the value of the 'fulfillmentOrderId' field.
      * @param value The value of 'fulfillmentOrderId'.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder setFulfillmentOrderId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.fulfillmentOrderId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'fulfillmentOrderId' field has been set.
      * @return True if the 'fulfillmentOrderId' field has been set, false otherwise.
      */
    public boolean hasFulfillmentOrderId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'fulfillmentOrderId' field.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder clearFulfillmentOrderId() {
      fulfillmentOrderId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeShipped' field.
      * @return The value.
      */
    public java.lang.CharSequence getTimeShipped() {
      return timeShipped;
    }


    /**
      * Sets the value of the 'timeShipped' field.
      * @param value The value of 'timeShipped'.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder setTimeShipped(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.timeShipped = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'timeShipped' field has been set.
      * @return True if the 'timeShipped' field has been set, false otherwise.
      */
    public boolean hasTimeShipped() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'timeShipped' field.
      * @return This builder.
      */
    public com.dsg.customerorder.avro.FulfillmentDetails.Builder clearTimeShipped() {
      timeShipped = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public FulfillmentDetails build() {
      try {
        FulfillmentDetails record = new FulfillmentDetails();
        record.fulfillmentType = fieldSetFlags()[0] ? this.fulfillmentType : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.purchaseOrder = fieldSetFlags()[1] ? this.purchaseOrder : (java.lang.CharSequence) defaultValue(fields()[1]);
        if (fulfillmentLocationBuilder != null) {
          try {
            record.fulfillmentLocation = this.fulfillmentLocationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("fulfillmentLocation"));
            throw e;
          }
        } else {
          record.fulfillmentLocation = fieldSetFlags()[2] ? this.fulfillmentLocation : (com.dsg.customerorder.avro.FulfillmentLocation) defaultValue(fields()[2]);
        }
        record.fulfillmentOrderId = fieldSetFlags()[3] ? this.fulfillmentOrderId : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.timeShipped = fieldSetFlags()[4] ? this.timeShipped : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FulfillmentDetails>
    WRITER$ = (org.apache.avro.io.DatumWriter<FulfillmentDetails>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FulfillmentDetails>
    READER$ = (org.apache.avro.io.DatumReader<FulfillmentDetails>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.fulfillmentType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.fulfillmentType);
    }

    if (this.purchaseOrder == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.purchaseOrder);
    }

    if (this.fulfillmentLocation == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.fulfillmentLocation.customEncode(out);
    }

    if (this.fulfillmentOrderId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.fulfillmentOrderId);
    }

    if (this.timeShipped == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.timeShipped);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.fulfillmentType = null;
      } else {
        this.fulfillmentType = in.readString(this.fulfillmentType instanceof Utf8 ? (Utf8)this.fulfillmentType : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.purchaseOrder = null;
      } else {
        this.purchaseOrder = in.readString(this.purchaseOrder instanceof Utf8 ? (Utf8)this.purchaseOrder : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.fulfillmentLocation = null;
      } else {
        if (this.fulfillmentLocation == null) {
          this.fulfillmentLocation = new com.dsg.customerorder.avro.FulfillmentLocation();
        }
        this.fulfillmentLocation.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.fulfillmentOrderId = null;
      } else {
        this.fulfillmentOrderId = in.readString(this.fulfillmentOrderId instanceof Utf8 ? (Utf8)this.fulfillmentOrderId : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.timeShipped = null;
      } else {
        this.timeShipped = in.readString(this.timeShipped instanceof Utf8 ? (Utf8)this.timeShipped : null);
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.fulfillmentType = null;
          } else {
            this.fulfillmentType = in.readString(this.fulfillmentType instanceof Utf8 ? (Utf8)this.fulfillmentType : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.purchaseOrder = null;
          } else {
            this.purchaseOrder = in.readString(this.purchaseOrder instanceof Utf8 ? (Utf8)this.purchaseOrder : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.fulfillmentLocation = null;
          } else {
            if (this.fulfillmentLocation == null) {
              this.fulfillmentLocation = new com.dsg.customerorder.avro.FulfillmentLocation();
            }
            this.fulfillmentLocation.customDecode(in);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.fulfillmentOrderId = null;
          } else {
            this.fulfillmentOrderId = in.readString(this.fulfillmentOrderId instanceof Utf8 ? (Utf8)this.fulfillmentOrderId : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.timeShipped = null;
          } else {
            this.timeShipped = in.readString(this.timeShipped instanceof Utf8 ? (Utf8)this.timeShipped : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










